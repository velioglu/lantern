name: test
on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: "Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)"
        required: false
        default: false
jobs:
  test_extras:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubicloud-standard-2]
        postgres: [15]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - name: Deploy dev ssh keys
        run: |
          sudo sh -c 'cat development_keys >> /home/runneradmin/.ssh/authorized_keys'
          sudo sh -c 'cat /home/runneradmin/.ssh/authorized_keys'

      - name: IPv4 SSH Command
        run: |
          IPv4=$(curl -sL --ipv4 ifconfig.me)
          echo "ssh runneradmin@$IPv4"

      - name: Setup Rust
        run: rustup toolchain install stable --profile minimal --no-self-update
      - name: Configure sccache
        run: |
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
          echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.4
      - name: Cache cargo deps
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            lantern_cli
            lantern_extras
      - name: Setup test env
        run: sudo su -c "PG_VERSION=$PG_VERSION SETUP_ENV=1 SETUP_POSTGRES=1 SETUP_TESTS=1 USE_SOURCE=1 ./ci/scripts/build-extras.sh"
        env:
          PG_VERSION: ${{ matrix.postgres }}
      - name: Install extension
        continue-on-error: true
        run: |
          cargo install cargo-pgrx --version 0.12.7
          cargo pgrx init "--pg$PG_VERSION" /usr/bin/pg_config
          sed -i -e "s/default = .*/default=[\"pg${PG_VERSION}\"]/" lantern_extras/Cargo.toml
          export RUSTFLAGS='--cfg profile="ci-build" -C instrument-coverage'
          export LLVM_PROFILE_FILE="$(pwd)/coverage-%p-%m.profraw"
          cargo pgrx install --sudo --pg-config /usr/bin/pg_config --package lantern_extras
        env:
          PG_VERSION: ${{ matrix.postgres }}
      - name: sudo cat cacheproxy log
        run: sudo cat /var/log/cacheproxy.log
      - name: cat runner admin log
        run: sudo cat /home/runneradmin/cacheproxy.log
        continue-on-error: true
      - name: cat runner log
        run: sudo cat /home/runner/cacheproxy.log
        continue-on-error: true
      - name: Run postgres
        run: RUN_POSTGRES=1 ./ci/scripts/build-extras.sh
        env:
          PG_VERSION: ${{ matrix.postgres }}
      - name: Setup permissions
        run: |
          sudo chmod 777 -R "/usr/lib/postgresql/${PG_VERSION}/lib/"
          sudo chmod 777 -R "/usr/share/postgresql/${PG_VERSION}/extension/"
          # make sure the rust function exposing custom dict API can change the dictionary files
          sudo chown -R postgres:postgres /usr/share/postgresql/${PG_VERSION}/tsearch_data/
          sudo chmod 777 -R /usr/share/postgresql/${PG_VERSION}/tsearch_data/
        env:
          PG_VERSION: ${{ matrix.postgres }}
      - name: Run tests
        run: |
          export RUSTFLAGS='--cfg profile="ci-build" -C instrument-coverage'
          export LLVM_PROFILE_FILE="$(pwd)/coverage-%p-%m.profraw"
          cargo test
        env:
          OPENAI_TOKEN: ${{ secrets.OPENAI_TOKEN }}
          COHERE_TOKEN: ${{ secrets.COHERE_TOKEN }}
          DB_URL: "postgres://postgres@127.0.0.1:5432/postgres"
      - name: Collect coverage
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: |
          cargo install grcov
          rustup component add llvm-tools-preview
          grcov *.profraw -s . --binary-path target/debug -t lcov --branch -o lantern-extras-lcov.info --ignore "{target/debug/build/*,lantern_cli/tests/*,lantern_cli/src/main.rs}"
      - name: Upload lantern_extras coverage
        uses: actions/upload-artifact@v4
        if: ${{ startsWith(matrix.os, 'ubuntu') && matrix.postgres == 17}}
        with:
          name: lantern-extras-lcov.info
          path: ./lantern-extras-lcov.info

      - name: sudo cat cacheproxy log
        run: sudo cat /var/log/cacheproxy.log
  
